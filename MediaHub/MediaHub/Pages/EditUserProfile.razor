@page "/editUserProfile"

@using MediaHub.Services
@inject UserProfileService _userProfileServiceInstance
@inject IdentityService _identityServiceInstance

<h3>Edit your profile</h3>

<form>
    <div class="form-control-file">
        <img src="@_userProfile.ProfilePicture" alt="No profile picture set..." />
        <br /><br />
        <InputFile accept=".png,.jpg,.jpeg,.gif" OnChange="@UploadProfilePicture"/>
    </div>
    <div class="form-group">
        <label for="username">Username</label>
        <input id="username" class="form-control" @bind-value="_userProfile.Username" maxlength="50" required />
    </div>
    <div class="form-group">
        <label for="bio">Biography (max. 255 characters)</label>
        <textarea id="bio" class="form-control" maxlength="255" @bind="_userProfile.Biography" @bind:event="oninput">@_userProfile.Biography</textarea>
    </div>
    <br />
    <button type="submit" onclick="@SaveChanges" class="btn btn-primary">Save changes</button>
</form>

@code {
    private Data.Persistency.UserProfile _userProfile;

    protected override void OnInitialized()
    {
        string userId = _identityServiceInstance.UserId;
        _userProfile = _userProfileServiceInstance.GetUserProfileById(userId);
    }

    private async Task<int> SaveChanges()
    {
        return await _userProfileServiceInstance.UpdateUserProfileAsync(_userProfile);
    }

    private async Task UploadProfilePicture(InputFileChangeEventArgs e)
    {
        string contentType = e.File.ContentType;
        IBrowserFile resizedImage = await e.File.RequestImageFileAsync(contentType, 300, 300);
        byte[] buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);
        string imageData = $"data:{contentType};base64,{Convert.ToBase64String(buffer)}";

        _userProfile.ProfilePicture = imageData;
    }
}
