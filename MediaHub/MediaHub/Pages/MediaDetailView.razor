@namespace MediaHub.View

@page "/movieDetailView/{Id:int}"

<PageTitle>Media Details</PageTitle>
@using MediaHub.Services
@using MediaHub.Data.Model
@using MediaHub.Data.ViewModel
@inject IMediaSearchViewModel _mediaSearchViewModel 
@inject IIdentityService _identityService
@inject IRatingViewModel _ratingViewModel

@if (_movie != null)
{
<div class="detaile-view-container">
    <div class="title-and-add-button">
        <h1>@_movie.Title</h1>
        @if (_ratingViewModel.IsAddedToProfile)
        {
            <button class="btn btn-primary" @onclick="_ratingViewModel.ToggleIsAddedToProfile"><span class="oi oi-minus" aria-hidden="true"></span> Remove from favorites</button>
        } else
        {
            <button class="btn btn-primary" @onclick="_ratingViewModel.ToggleIsAddedToProfile"><span class="oi oi-plus" aria-hidden="true"></span> Add to favorites</button>
        }
    </div>
    <div class="Rating">
        <h3>My Rating</h3>
        <Rating Callback="(byte value) => _ratingViewModel.Rating = value" CurrentValue="_ratingViewModel.Rating"/>
    </div>
    <img alt="Poster" width="100px" src="@_movie.PosterUrl">
    <table class="media-data-table">
        <tbody>
            <tr>
                <td class="caption">Year:</td>
                <td>@_movie.ReleaseDate</td>
            </tr>
            <tr>
                <td class="caption">Duration:</td>
                <td>@_movie.Runtime min</td>
            </tr>
            <tr>
                <td class="caption">Genre:</td>
                <td>@string.Join(", ", @_movie.Genres)</td>
            </tr>
            <tr>
                <td class="caption">TMDb Rating:</td>
                <td>@_movie.Rating / 10</td>
            </tr>
            <tr>
                <td colspan="2">@_movie.Overview</td>
            </tr>
        </tbody>
    </table>
</div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Movie? _movie;

    protected override async Task OnInitializedAsync()
    {
        _movie = await _mediaSearchViewModel.GetMovieAsync(Id);
        _ratingViewModel.Load(_identityService!.UserId!, _movie); //force not null --> handled by microsoft auth framework
    }
}
