@page "/mediaSearch"

@using MediaHub.Data.MediaModule.ViewModel
@using MediaHub.View
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject ProtectedSessionStorage SessionStorage
@inject IMediaSearchViewModel MediaServiceInstance
@inject IMediaTableViewModel _mediaTableViewModel;

<PageTitle>Search Media</PageTitle>

<h1 class="center-heading">Search for Media</h1>

<form class="media-search" @onsubmit=SearchCall>
    <input class="form-control" type="search" placeholder="Search for Media ..." @bind="searchString"/>
    <button type="submit" class="btn btn-primary">Search</button>
</form>

@if (mediaList != null)
{
    <div class="search-result-box">
    <MediaTable MoviesAndRatings="@mediaList" AlternativeText="Sorry, but there is no media found according to your search text."/>
    </div>
}

@code
{
    private List<IMediaTableViewModel.MovieAndRating>? mediaList;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        @if (firstRender)
        {
            var result = await SessionStorage.GetAsync<string>("SearchString");
            if (result.Success)
            {
                if(result.Value != null)
                {
                    searchString = result.Value;
                    await SearchCall();
                    StateHasChanged();
                }
            }
        }
    }

    protected async Task SearchCall()
    {
        await SessionStorage.SetAsync("SearchString", searchString);
        mediaList = await _mediaTableViewModel.GetMoviesByNameAsync(searchString);
    }

    private string searchString { get; set; } = "";

}
