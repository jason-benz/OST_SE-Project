@page "/chat"
@using MediaHub.Services
@using MediaHub.Data.Model
@using MediaHub.Data.ViewModel
@using Microsoft.AspNetCore.Routing.Matching
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using SendGrid.Helpers.Mail.Model

@inject IdentityService _identityServiceInstance
@inject IChatViewModel _chatViewModel

@if (_identityServiceInstance.UserId == null)
{
    <p>There is a problem with your profile. Please contact support.</p>
}
else
{
    <h3>Contact List:</h3>

    foreach (var contact in userProfilesOfContacts)
    {
        <div class="contactListElement" @onclick="@(() => OpenChat(@contact.UserId))">@contact.Username</div>
    }

    
    <form class="media-search" @onsubmit=SaveMessageToDb>
        <input type="text" placeholder="Type your message here" @bind="currentMessage" required/>
        <button type="submit" class="btn btn-primary">Send Message</button>
    </form>

    <div class="Contactlist">
        <ContactList Callback="(string userId) => {_chatViewModel.correspondentUserId = userId; correspondentId = userId}"/> <!--Fixme Unsure if this works here -->
    </div>
    
    <div>
        Alle Inhalte aller Nachrichten:
        @foreach (var message in _messages)
        {
            <div class = "singleMessage">
                @message.Content
            </div>
            
            ; // TODO
        }

    </div>
}

@code
{
    private string currentMessage { get; set; }= "";
    private List<Message> _messages = new List<Message>();
    public List<MediaHub.Data.Model.UserProfile> userProfilesOfContacts { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _chatViewModel.SetSenderById(_identityServiceInstance.UserId);
        userProfilesOfContacts = _chatViewModel.GetAllContactUserProfiles();
    }
    
    void SaveMessageToDb()
    {
        // FIXME Hardcoded receiver id "c581ffdf-24e2-49e5-a540-15e0e5f51cd2"
        _chatViewModel.InsertMessage(currentMessage);
    }

    public void OpenChat(string userId)
    {
        _chatViewModel.SetReceiverById(userId);
        _messages = _chatViewModel.GetAllMessagesForActiveChat();
    }
}

