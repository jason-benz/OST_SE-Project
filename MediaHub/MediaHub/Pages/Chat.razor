@page "/chat"

@using MediaHub.Data.MessagingModule.Model
@using MediaHub.Data.MessagingModule.ViewModel
@using MediaHub.Services
@using Microsoft.AspNetCore.Routing.Matching
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.CodeAnalysis.Scripting
@using SendGrid.Helpers.Mail.Model

@inject IIdentityService _identityServiceInstance
@inject IChatViewModel _chatViewModel

@if (_identityServiceInstance.UserId == null)
{
    <p>There is a problem with your profile. Please contact support.</p>
}
else
{
    <div id="chat-container">
        <div id="contactlist-container">
            <h3>Contact List:</h3>
            <ul id="contactlist">
                @foreach (var contact in userProfilesOfContacts)
                {
                    <li>
                        @if (contact.UserId == _chatViewModel.Receiver?.UserId)
                        {
                            <button class="contactlist-element focus" @onclick="@(() => OpenChat(@contact.UserId))">@contact.Username</button>
                        }
                        else
                        {
                            <button class="contactlist-element" @onclick="@(() => OpenChat(@contact.UserId))">@contact.Username</button>
                        }
                    </li>
                }
            </ul>
        </div>

        <div id="chat-input-and-messages-container">
            <div id="chat-messages-container">
                @foreach (var message in _messages)
                {
                    <div class="msg-line">
                        @if (_identityServiceInstance.UserId.Equals(message.Sender.UserId))
                        {
                            <div class="single-msg sent-msg"> @message.Content </div>
                        }
                        else
                        {
                            <div class="single-msg received-msg"> @message.Content </div>
                        }
                    </div>
                }
            </div>
            <div id="chat-input-container">
                <form @onsubmit=SaveMessageToDb>
                    <input id="msg-input" type="text" placeholder="Type your message here" @bind="currentMessage" required/>
                    <button id="send-msg-btn" type="submit" class="btn btn-primary">Send Message</button>
                </form>
            </div>
        </div>
    </div>
}

@code
{
    private string currentMessage { get; set; }= "";
    private List<Message> _messages = new();
    public List<Data.ProfileModule.Model.UserProfile> userProfilesOfContacts { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _chatViewModel.SetSenderById(_identityServiceInstance.UserId);
        userProfilesOfContacts = _chatViewModel.GetAllContactUserProfiles();
    }
    
    void SaveMessageToDb()
    {
        _chatViewModel.InsertMessage(currentMessage);
        currentMessage = "";
    }

    public void OpenChat(string userId)
    {
        _chatViewModel.SetReceiverById(userId);
        _messages = _chatViewModel.GetAllMessagesForActiveChat();
    }
}

