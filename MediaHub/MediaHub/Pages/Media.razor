@page "/media"

<PageTitle>Media</PageTitle>
@using MediaHub.Services
@using MediaHub.Data.Model
@using MediaHub.Data.ViewModel
@using Microsoft.AspNetCore.Routing.Matching
@inject IMediaService MediaServiceInstance 

<h1 class="center-heading">Search for Media</h1>

<form class="media-search" @onsubmit=SearchCall>
    <input class="form-control" type="search" placeholder="Search for Media ..." @bind="searchString"/>
    <button type="submit" class="btn btn-primary">Search</button>
</form>

@if (movies != null)
{
    if (movies.Count != 0)
    {
        <div class="search-result-box">
        <table class="table">
            <thead>
                <tr>
                <th>Artwork</th>
                <th>Title</th>
                <th>Writer</th>
                <th>Year</th>
                <th>Rating</th>
                </tr>
            </thead>
        <tbody>
        @foreach (var movie in movies)
        {
            <tr>
                <td><img width="100px" src="@movie.PosterUrl"></td>
                <td>@movie.Title</td>
                <td></td>
                <td>@movie.ReleaseDate</td>
                <td>@movie.Rating</td>
            </tr>
        }
        </tbody>
        </table>
        </div>
    } else
    {
        <p>Sorry, but there is no media found according to your search text.</p>
    }

}
@code
{
    private List<IMovie> movies;

    //protected override async Task OnInitializedAsync()
    //{
    //    movies = await MediaServiceInstance.GetMoviesAsync(searchString);
    //}

    protected async Task SearchCall()
    {
        movies = await MediaServiceInstance.GetMoviesAsync(searchString);
    }

    private string searchString { get; set; } = "";

    
}