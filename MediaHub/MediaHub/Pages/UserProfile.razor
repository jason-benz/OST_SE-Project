@page "/userProfile/{Username?}"

@using MediaHub.Services
@using MediaHub.View
@using MediaHub.Data.ViewModel
@using MediaHub.Data.Model

@inject IUserProfileViewModel _userProfileServiceInstance
@inject IdentityService _identityServiceInstance
@inject IMediaSearchViewModel _mediaSearchViewModel
@inject IMediaTableViewModel _mediaTableViewModel
@inject NavigationManager _navigationManager

@if (_userProfile == null)
{
    <h3>Unknown profile</h3>
    <p>User with the username '@Username' was not found.</p>
}
else
{
    <div class="userProfileOverview">
        <h1>@_userProfile.Username's Profile</h1>
        <img src="@_userProfile.ProfilePicture" alt="No profile picture set..."/>
        <p>@_userProfile.Biography</p>

        <h2>Media added to this profile:</h2>
        <div class="addedMovies">
            <MediaTable DisplayUserRatings="true" ShowReleaseDate="false" MoviesAndRatings="_moviesAndRatings" AlternativeText="There is currently no media added to this profile"/>
        </div>  
    </div>
    
    
}


@code {
    private Data.Model.UserProfile? _userProfile;
    private List<Movie> _media = new List<Movie>();
    private IEnumerable<MediaRating> _userRatings;
    private IEnumerable<IMediaTableViewModel.MovieAndRating>? _moviesAndRatings;

    [Parameter]
    public string? Username { get; set; }

    protected override void OnInitialized()
    {
        string userId;
        if(Username == null)
        {
            userId = _identityServiceInstance.UserId;
            _userProfile = _userProfileServiceInstance.GetUserProfileById(userId);
        }
        else
        {
            _userProfile = _userProfileServiceInstance.GetUserProfileByUsername(Username);
            userId = _userProfile==null?null:_userProfile.UserId;
        }
        _moviesAndRatings = _mediaTableViewModel.GetMoviesOfUserProfileByUserIdAsync(userId);
    }
}
